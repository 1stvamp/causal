#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('../google_appengine'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('.'),
                        'excludes': [u'.git'],
                        'filter': '*',
                        'include_hidden': True,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.main-file = loc('helios/manage.py')
[user attributes]
debug.breakpoints = {loc('helios/main/email-auth.py'): {14: (0,
        None,
        1,
        0)},
                     loc('helios/main/views.py'): {20: (0,
        None,
        1,
        0),
        171: (0,
              None,
              1,
              0)},
                     loc('usage.py'): {95: (0,
        None,
        1,
        0),
                                       100: (0,
        None,
        1,
        0),
                                       169: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../google_appengine/dev_appserver.py'): {}}
debug.run-args = {loc('helios/manage.py'): 'runserver --noreload',
                  loc('../google_appengine/dev_appserver.py'): '/home/channa'\
        'm/Code/Helios'}
debug.show-args-dialog = {loc('helios/manage.py'): False,
                          loc('../google_appengine/dev_appserver.py'): False}
edit.file-encoding = {loc('helios/main/admin.py'): 'UTF-8',
                      loc('helios/main/email-auth.py'): 'UTF-8',
                      loc('helios/main/templates/account/login.html'): 'UTF-'\
        '8',
                      loc('helios/main/templates/accounts/profile.html'): 'U'\
        'TF-8',
                      loc('helios/main/templates/accounts/register.html'): ''\
        'UTF-8',
                      loc('helios/main/templates/base.html'): 'UTF-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'm4pIeD44BL2uY8nnOPO4vXBbo9'\
        'temp3y',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(1,),
        (1,
         0),
        (1,
         0,
         1),
        (1,
         0,
         1,
         0)],
                                 'selected-nodes': [(1,
        0,
        11)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('templates',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [9],
        'notebook_display': 'normal',
        'notebook_percent': 0.40163934426229508,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['U\n',
        'yes\n']},
                       'sel-line': 11,
                       'sel-line-start': 613,
                       'selection_end': 613,
                       'selection_start': 613}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 52,
                       'folded-linenos': [],
                       'history': {None: ['ob = a.getObject()\n',
        'a = subject.getObject()\n',
        'p = a.Schema()\n',
        'for i in p._fields:\n',
        'p = a[0]\n',
        'p.__dict__()\n',
        'p.__dict__\n',
        'p.EffectiveDate\n',
        'p.PublishedDate\n',
        'p.Date\n',
        'dir(p)\n',
        'print dir(p)\n',
        'for i in dir(p):\n',
        '\ti\n',
        'p\n',
        'p.creation_date()\n',
        'p.creation_date\n',
        'p.modification_date\n',
        'p.effectiveDate\n',
        "a= catalog(portal_type='News Item',review_state=state,path=path,sor"\
        "t_on='Date',sort_order='reverse',sort_limit=limit)[:limit]\n",
        'a.publishedDate\n',
        'a.published_date\n',
        'a[0].published_date\n',
        'a[0].publishedDate\n',
        'a[0]\n',
        "a[0].has_key('effectiveDate')\n",
        "a[0].has_key('Date')\n",
        "a[0].has_key('creation_date')\n",
        'a[0].effectiveDate\n',
        'a[0].geteffectiveDate()\n',
        'a[0].getEffectiveDate()\n',
        'b = a[0].getObject()\n',
        'b\n',
        'b.EffectiveDate()\n',
        "results = self.context.portal_catalog(portal_type='Promo Item',path"\
        "={'query': path, 'depth':1},review_state='published',sort_order='de"\
        "scending',)[:MAX_PROMO_RESULTS]\n",
        'len(results)\n',
        'crumbs\n',
        "query = {'portal_type': ['KeyArticle', 'KeyExampleArticle', 'KeyWra"\
        "pper'],'path': {'query': pathQuery,'depth': 1,},'sort_on': 'long_so"\
        "rtable_title',}\n",
        'brains\n',
        'brains[0]\n',
        'a = brains[0]\n',
        'a.reviewstatus\n',
        'a.status\n',
        'a.review_state\n',
        'self\n',
        'messages\n',
        'users = False\n',
        'users = 0\n',
        'users = []\n',
        'nsmr\n',
        'name\n',
        'self.name\n',
        'self.id\n',
        'self.title\n',
        'self.description\n',
        'self.regex\n',
        'r\n',
        'm\n',
        'randomstring\n',
        'retval\n',
        '"%s/passwordreset/%s" % (host, randomstring)\n',
        'u = users[0]\n',
        'u\n',
        'a = u.getObject()\n',
        'a\n',
        'a.id\n',
        'password_reset.requestReset(a.id)\n',
        'reset_url_parts = password_reset.requestReset(uid)\n',
        'reset_url_parts\n',
        'userid\n',
        'uid.getId()\n',
        'reset_url\n',
        'message\n',
        "db_user = app.portal.portal_membership.getMemberById(('asdf'))\n",
        "db_user = context.portal_membership.getMemberById(('asdf'))\n",
        'db_user\n',
        'db_user.keys()\n',
        'form\n',
        "db_user = context.portal_membership.getMemberById(('asdff'))\n",
        'db_user.getContactMe()\n',
        'preferred_phone\n',
        'context.REQUEST.form\n',
        'payment_type\n',
        'message_data\n',
        'for k,v in message_data:\n',
        'for k,v in message_data.iteritems():\n',
        '\tk,v\n',
        'fieldnames\n',
        'mail_me\n',
        'fieldset\n',
        'terms\n',
        'contactMe\n',
        'state.getErrors()\n',
        'state.id\n',
        'state.keys()\n',
        'state\n',
        'context\n',
        "context.REQUEST.get('contactMe')\n",
        'payment_rate\n',
        'url_text\n'],
                                   u'file:/home/channam/Code/Helios/helios/manage.py': [''\
        'password\n'],
                                   u'file:/home/channam/Code/Research/4.py': [''\
        'client.request_token_url\n',
        'oauth_request.http_method\n',
        'self.request_token_url\n',
        'oauth_request.to_header()\n',
        'url\n',
        'host\n',
        'port\n',
        'params\n',
        'response\n',
        'query\n',
        'oauth_request\n',
        'client.authorize_token(oauth_request)\n',
        'line\n'],
                                   u'file:/home/channam/Code/Research/four_map/mapper.py': [""\
        "resp, content = client.request('http://api.foursquare.com/v1/checki"\
        "ns', \"GET\")\n",
        'consumer = oauth.Consumer(consumer_key, consumer_secret)\n',
        'client = oauth.Client(consumer)\n',
        'resp, content = client.request(request_token_url, "GET")\n',
        'request_token = dict(urlparse.parse_qsl(content))\n',
        "\"%s?oauth_token=%s\" % (authorize_url, request_token['oauth_token'"\
        "])\n",
        'token\n',
        'token = "SXYZKD2OGJSTPSNAG4XLOZ1DQ5QSIWIKVYAUZ4B13AK35NTP"\n',
        'token = oauth.Token("SXYZKD2OGJSTPSNAG4XLOZ1DQ5QSIWIKVYAUZ4B13AK35N'\
        'TP")\n',
        'oauth_verifier = "SXYZKD2OGJSTPSNAG4XLOZ1DQ5QSIWIKVYAUZ4B13AK35NTP"'\
        '\n',
        "token = oauth.Token(request_token['oauth_token'], request_token['oa"\
        "uth_token_secret'])\n",
        'token.set_verifier(oauth_verifier)\n',
        'access_token = dict(urlparse.parse_qsl(content))\n',
        "\"    - oauth_token        = %s\" % access_token['oauth_token']\n",
        "\"    - oauth_token_secret = %s\" % access_token['oauth_token_secre"\
        "t']\n",
        'resp, content = client.request(access_token_url, "POST")\n',
        'content\n',
        'resp\n',
        'access_token_url\n',
        "oauth_request = oauth.OAuthRequest.from_consumer_and_token(consumer"\
        ", token=token, http_method='POST', http_url=RESOURCE_URL, parameter"\
        "s=parameters)\n",
        "oauth_request = oauth.OAuthRequest.from_consumer_and_token(consumer"\
        ", token=token, http_method='POST', http_url=RESOURCE_URL, )\n",
        'signature_method_hmac_sha1 = oauth.OAuthSignatureMethod_HMAC_SHA1()'\
        '\n',
        'oauth_request.sign_request(signature_method_hmac_sha1, consumer, to'\
        'ken)\n',
        'params = client.access_resource(oauth_request)\n',
        'token = "NACFWHQJT2DVN0YVUFOYWAJBPXHFYJEDUOMEOKPXVNMFAQDP"\n',
        'toekn\n',
        'token = oauth.OAuthToken.from_string("NACFWHQJT2DVN0YVUFOYWAJBPXHFY'\
        'JEDUOMEOKPXVNMFAQDP")\n',
        'oauth_request\n',
        "oauth.OAuthClient.connection.request('POST', RESOURCE_URL, body=oau"\
        "th_request.to_postdata(), headers=headers)\n",
        'connection = httplib.HTTPConnection("%s:%d" % (self.server, self.po'\
        'rt))\n',
        'RESOURCE_URL = "http://api.foursquare.com/v1/checkins"\n',
        "headers = {'Content-Type' :'application/x-www-form-urlencoded'}\n",
        "connection = httplib.HTTPConnection(\"%s:%d\" % ('api.foursquare.co"\
        "m', '80'))\n",
        "connection = httplib.HTTPConnection(\"%s:%d\" % ('api.foursquare.co"\
        "m', 80))\n",
        'RESOURCE_URL = "/v1/checkins"\n',
        "oauth_request = oauth.OAuthRequest.from_consumer_and_token(consumer"\
        ", token=token, http_method='POST', http_url=RESOURCE_URL)\n",
        'res\n',
        'res.read()\n',
        'headers\n',
        'oauth_request.to_postdata()\n',
        "connection.request('POST', RESOURCE_URL, body=oauth_request.to_post"\
        "data(), headers=headers)\n",
        'res = connection.getresponse()\n',
        'import httplib\n',
        'import oauth.oauth as oauth\n',
        'token = oauth.OAuthToken.from_string("oauth_token_secret=ROGXEUYN2G'\
        'MERFNJ1YT3Y4METHYH5O5GUVJYFMEIIEAML1LG&oauth_token=NACFWHQJT2DVN0YV'\
        'UFOYWAJBPXHFYJEDUOMEOKPXVNMFAQDP")\n',
        'token.key\n',
        'params = {\n',
        "'oauth_version': \"1.0\",\n",
        "'oauth_nonce': oauth.generate_nonce(),\n",
        "'oauth_timestamp': int(time.time())\n",
        '}\n',
        "params['oauth_token'] = consumer.key\n",
        "params['oauth_token'] = token.key\n",
        "params['oauth_consumer_key'] = consumer.key\n",
        'url = "http://api.foursquare.com/v1/checkins"\n',
        'req.sign_request(signature_method, consumer, token)\n',
        'req\n',
        'client = oauth.Client(consumer, token)\n',
        'consumer\n',
        "consumer = oauth.OAuthConsumer('WZG3BFLERY1FOCNVA2D5NNZZ3IG0MR4DOYH"\
        "A4BQAQT40PWX5', 'DI1SYWTW4VK53UEJGNCJ2VGTWGMCVPV5NGMYZ20YXMJD5YQ3')"\
        "\n"],
                                   u'file:/home/channam/Code/Research/protocol_buffers/tests/test_base.py': [''\
        'person\n',
        'person.id\n'],
                                   u'file:/home/channam/Code/google_appengine/dev_appserver.py': [''\
        'os.pathsep.join(EXTRA_PATHS)\n',
        'token_info\n',
        'client\n',
        'client.get_signed_body()\n',
        "environ['REQUEST_METHOD']\n",
        'handler.get(*groups)\n',
        '*groups\n',
        'self.get_url\n',
        'twitter in self.get_url()\n',
        "'twitter' in self.get_url()\n",
        'request_token_params\n',
        'token = OAuthRequestToken(service=service,**request_token_params)\n',
        'token.created\n',
        'token.service\n',
        "\"%s?oauth_token=%s\" % (oauth_details['authorize_url'], request_to"\
        "ken_params['oauth_token'])\n",
        "\"%s?oauth_token=%s\" % (oauth_details['user_auth_url'], request_to"\
        "ken_params['oauth_token'])\n",
        "token = oauth.Token(access_token['oauth_token'] , access_token['oau"\
        "th_token_secret'])\n",
        "access_token['oauth_token']\n",
        "access_token['oauth_token_secret']\n",
        'client = oauth.Client(consumer, token)\n',
        'request_token\n',
        "self.request.get('oauth_token')\n",
        'request_token.oauth_token\n',
        'token\n',
        'request_token.oauth_token, request_token.oauth_token_secret\n',
        'access_token\n',
        "new = oauth.Token(access_token['oauth_token'] , access_token['oauth"\
        "_token_secret'])\n",
        'new\n',
        'a = oauth.Client(consumer, new)\n',
        "url = 'http://twitter.com/account/verify_credentials'\n",
        'resp2\n',
        'content1\n',
        'resp1, content1 = a.request(url, "GET")\n',
        'resp1\n',
        "**dict(token.split('=') for token in content.split('&'))\n",
        "token.split('=') for token in content.split('&')\n",
        "print token for token in content.split('&')\n",
        "token for token in content.split('&')\n",
        "for token in content.split('&'):\n",
        '\ttoken\n',
        "(token.split('=') for token in content.split('&'))\n",
        "a = (token.split('=') for token in content.split('&'))\n",
        '**a\n',
        '**dict(a)\n',
        "dict((token.split('=') for token in content.split('&')))\n",
        'self.get_url()\n',
        'tokens = OAuthAccessToken.all()\n',
        'tokens\n',
        'tokens.filter("google_username = ", user.nickname())\n',
        'tokens.fetch(1)\n',
        'user.nickname()\n',
        "twitter_details['default_api_prefix'] + '/statuses/user_timeline' +"\
        " twitter_details['default_api_suffix']\n",
        'content[0]\n',
        'from django.utils import simplejson\n',
        'json = simplejson.loads(content)\n',
        'json\n',
        'json[0]\n',
        "url = 'http://api.foursquare.com/v1/checkins'\n",
        'resp, content = client.request(url, "GET")\n',
        "oauth_details['access_token_url']\n",
        'httplib.__class__\n',
        'headers\n',
        'resp\n',
        'response\n',
        'a = response.read()\n',
        'uri\n',
        'conn\n',
        'conn.getresponse()\n',
        'a = conn.getresponse()\n',
        'a\n',
        'a.read()\n',
        'content\n'],
                                   u'file:/home/channam/projects/isotoma/sandbox/chris/elizabeth_application/bin/django': [''\
        'form.errors\n',
        'response.status_code\n',
        'response.request\n',
        'response._headers\n',
        "response._headers['location']\n",
        "response._headers['location']['Location']\n",
        "response._headers['location'][0]\n",
        "response._headers['location'][1]\n",
        'response\n',
        'response.cookies\n',
        'response.context[0]\n',
        'response.context\n',
        'response.items()\n',
        'response.template\n',
        'response.template[0]\n',
        'response.template[0].name\n',
        'response.template[1].name\n',
        "self.assertFormError(response, 'register', 'email' )\n",
        "self.assertFormError(response, 'register', 'username', 'username' )"\
        "\n",
        'content\n',
        'self.content\n',
        "self.assertFormError(response, 'register', 'username', 'That email "\
        "address is already taken. Please choose another.' )\n",
        "self.assertFormError(response, 'form', 'username', 'That email addr"\
        "ess is already taken. Please choose another.' )\n",
        "self.assertFormError(response, 'form', 'email', 'That email address"\
        " is already taken. Please choose another.' )\n",
        "self.assertFormError(response, 'form', 'username', 'That username i"\
        "s already taken. Please choose another.' )\n",
        'name\n',
        "self.assertFormError(response, 'form', 'nominator', 'Nominator name"\
        " can not be empty' )\n",
        "self.assertFormError(response, 'form', 'nominator_name', 'Nominator"\
        " name can not be empty' )\n",
        'th.dirname(__file__)>>> os.path.dirname(__file__)\n',
        "f = open('test_data/test.pdf')\n",
        "f = open('./test_data/test.pdf')\n",
        'os.path.abspath()\n',
        'os.path.curdir()\n',
        'os.path.curdir\n',
        'os.path.dirname\n',
        'os.path.dirname()\n',
        'os.path.dirname(__file__)\n',
        "os.path.isfile('test_data')\n",
        "os.path.isdir('test_data')\n",
        "os.path.isfile('test.py')\n",
        "f = open('../main/test_data/test.pdf')\n",
        'os.getcwd()\n',
        "f = open('../src/main/test_data/test.pdf')\n",
        "f = open('../src/elizabeth/main/test_data/test.pdf')\n",
        'import os\n',
        'from settings import MEDIA_ROOT\n',
        "os.path.isfile(MEDIA_ROOT + 'admin@isotoma.com/test.pdf')\n",
        'applications\n',
        'applications[0].uploaded_description\n',
        'applications[0].name\n',
        'applications[0].forenma\n',
        'applications[0].forename\n',
        'applications[0]\n',
        'a\n',
        'a.nominator_name\n',
        'a = applications[0]\n',
        'a.uploaded_description\n',
        "self.data.has_key('uploaded_description')\n",
        "self.data['nominator_name']\n",
        "self.data['uploaded_description']\n",
        'self.cleaned_data\n',
        "self.cleaned_data['uploaded_description']\n",
        "form.clean('uploaded_description')\n",
        'form.clean_uploaded_description()\n',
        'self.data\n',
        'response.content\n',
        "self.assertFormError(response, 'form', 'uploaded_description', 'Upl"\
        "oaded file exceeds maximum allowable size' )\n",
        'i\n',
        'context\n',
        'err\n',
        'field_errors\n',
        "self.cleaned_data['uploaded_description']._get_size()\n",
        'MAX_FILE_SIZE\n',
        'application\n',
        'form\n',
        'form.base_fields\n',
        "form.base_fields['uploaded_description']\n"],
                                   u'file:/home/channam/projects/isotoma/sandbox/chris/filestore/manage.py': [""\
        "xml = request.POST.get('file')\n",
        'from lxml import etree\n',
        'root = etree.fromstring(xml)\n',
        'root = etree.fromstring(xml, encoding=unicode)\n',
        'root = etree.tostring(xml, encoding=unicode)\n',
        'type(xml)\n',
        'root = etree.fromstring(str(xml))\n',
        "request.POST.get('file')\n",
        'request.POST\n',
        'request.GET\n',
        "request.GET.get('file')\n",
        'file_path\n',
        'filename\n',
        'xml = Upload.objects.filter(id__exact=filename)[1]\n',
        'a = HttpResponse("Upload failed, invalid XML.")\n',
        'a\n',
        'a.status_code\n',
        'a.status_code = 400\n',
        'resp = HttpResponse(content="File not found", status=404)\n',
        'resp.status_code\n',
        'str\n',
        'xml\n',
        'str(xml)\n',
        'root = etree.fromstring(xml) \n',
        "root = etree.fromstring(xml.encode('utf-8')) \n",
        'root\n'],
                                   u'file:/home/channam/projects/isotoma/sandbox/chris/whattodo/do.py': [''\
        'content\n',
        'a\n',
        'self._finished\n',
        'not self._finished\n',
        'assert not self._finished\n',
        'assert (not self._finished)\n'],
                                   u'file:/home/channam/projects/proxy-reporting/code/emreports/manage.py': [''\
        'count\n',
        "count[8]['chris']['www.disney.com']\n",
        "count[10]['chris']['www.disney.com']\n",
        "count[10]['chris']['www.google.com']\n",
        'result\n',
        "response.context[0]['hours'][0]\n",
        'self._errors\n',
        'self.cleaned_data\n',
        'name, field\n',
        'self.valid_value(value)\n',
        'self.errors\n',
        'days_log[0]\n',
        'days_log[0].datetime\n',
        'a = days_log[0].datetime\n',
        'a\n',
        "a.strftime('%H')\n",
        'hour\n',
        "int(line.datetime.strftime('%H'))\n",
        'counted_hours[hour] = []\n',
        'counted_hours[hour].append(line)\n',
        'counted_hours[0]\n',
        'counted_hours = [range(0, 24)]\n',
        '\thour\n',
        '\tcounted_hours.append(hour)\n',
        'counted_hours = []\n',
        'for hour in range(0, 24):\n',
        '\tcounted_hours.append([])\n',
        'counted_hours\n',
        'csv\n',
        'from csv import writer\n',
        'username\n',
        'logs\n',
        'response.context[0][6]\n',
        'response.context[0][2]\n',
        'response.context[0]\n',
        'SquidLog.objects.filter(**params)\n',
        'len(SquidLog.objects.filter(**params))\n',
        'for i SquidLog.objects.filter(**params):\n',
        'days_log\n',
        '\ti.url\n',
        '\ti.datetime\n',
        'for i in days_log:\n',
        '\ti.datetime, i.url\n',
        "len(response.context[0]['hours'])\n",
        "response.context[0]['hours']\n",
        "response.context[0]['hours'][10]\n",
        "len(response.context[0]['hours'][10])\n",
        "len(response.context[0]['hours'][8])\n",
        'response.content[0]\n',
        '\ti.keys()\n',
        'for i in response.context:\n',
        'from BeautifulSoup import BeautifulSoup\n',
        'soup = BeautifulSoup(response.content)\n',
        'soup.prettify()\n',
        'for i in response.context[0]:\n',
        '\tprint i\n',
        "form.base_fields['username']\n",
        "form.base_fields['username'].label\n",
        "form.base_fields['username'].value\n",
        "form.base_fields['username'].error_messages\n",
        'form.cleaned_data\n',
        'form\n',
        'clicks_sorted_by_hour\n',
        'day\n',
        'year\n',
        'response.context\n',
        'response.request\n',
        'response.header\n',
        'response.header()\n',
        "response.has_header('mimetype')\n",
        'len(response.content)\n',
        'for i in response.content:\n',
        "response.content.split('\\r\\n')\n",
        "len(response.content.split('\\r\\n'))\n",
        "for i in response.content.split('\\r\\n'):\n",
        '\ti\n',
        'response\n',
        'self.assertEquals(response.status_code, 200)\n',
        "'{\"sites\": [{\"sitename\": \"www.google-analytics.com\", \"count\""\
        ": 1}, {\"sitename\": \"www.l.addthiscdn.com\", \"count\": 1}, {\"si"\
        "tename\": \"www.google.com\", \"count\": 14}, {\"sitename\": \"www."\
        "dlink.com\", \"count\": 2}, {\"sitename\": \"www.l.yimg.com\", \"co"\
        "unt\": 19}, {\"sitename\": \"www.s7.addthis.com\", \"count\": 7}, {"\
        "\"sitename\": \"www.bsav.search.yahoo.com\", \"count\": 1}, {\"site"\
        "name\": \"www.delicious.com\", \"count\": 2}, {\"sitename\": \"www."\
        "geo.yahoo.com\", \"count\": 2}, {\"sitename\": \"www.disney.com\", "\
        "\"count\": 28}]}'\n",
        "response.content == '{\"sites\": [{\"sitename\": \"www.google-analy"\
        "tics.com\", \"count\": 1}, {\"sitename\": \"www.l.addthiscdn.com\","\
        " \"count\": 1}, {\"sitename\": \"www.google.com\", \"count\": 14}, "\
        "{\"sitename\": \"www.dlink.com\", \"count\": 2}, {\"sitename\": \"w"\
        "ww.l.yimg.com\", \"count\": 19}, {\"sitename\": \"www.s7.addthis.co"\
        "m\", \"count\": 7}, {\"sitename\": \"www.bsav.search.yahoo.com\", \""\
        "count\": 1}, {\"sitename\": \"www.delicious.com\", \"count\": 2}, {"\
        "\"sitename\": \"www.geo.yahoo.com\", \"count\": 2}, {\"sitename\": "\
        "\"www.disney.com\", \"count\": 28}]}'\n",
        'date\n',
        'sites\n',
        "response.content['sites']\n",
        'response.status_code\n',
        'response.content\n',
        'params\n',
        'form.base_fields\n',
        "form.base_fields['datetime']\n",
        "form.base_fields['datetime'].validators\n",
        "form.base_fields['datetime'].__dict__\n",
        'self.fields\n',
        'field\n',
        "formats.get_format('DATETIME_INPUT_FORMATS')\n",
        'format_regex\n',
        'format\n',
        '*time.strptime(value, format)[:6]\n',
        'name\n',
        'value\n',
        'self.input_formats\n',
        'form.errors\n']},
                       'sel-line': 67,
                       'sel-line-start': 8778,
                       'selection_end': 8782,
                       'selection_start': 8782}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['from django.utils import simplejs'\
        'on \n']},
                       'sel-line': 4,
                       'sel-line-start': 180,
                       'selection_end': 200,
                       'selection_start': 200}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 44,
                                       'fReplaceText': u'CharField',
                                       'fReverse': False,
                                       'fSearchText': u'oauth_callback',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('helios/urls.py'),
        {'attrib-starts': [],
         'first-line': 3,
         'folded-linenos': [],
         'sel-line': 20,
         'sel-line-start': 757,
         'selection_end': 799,
         'selection_start': 799},
        1280144861.747993),
        (loc('helios/main/views.py'),
         {'attrib-starts': [],
          'first-line': 4,
          'folded-linenos': [],
          'sel-line': 14,
          'sel-line-start': 584,
          'selection_end': 634,
          'selection_start': 634},
         1280144906.3787429),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('history',
                             15)],
          'first-line': 87,
          'folded-linenos': [],
          'sel-line': 101,
          'sel-line-start': 4382,
          'selection_end': 4418,
          'selection_start': 4413},
         1280144915.8927979),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('history',
                             15)],
          'first-line': 1,
          'folded-linenos': [],
          'sel-line': 94,
          'sel-line-start': 4188,
          'selection_end': 4188,
          'selection_start': 4188},
         1280144916.4035821),
        (loc('helios/urls.py'),
         {'attrib-starts': [],
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 757,
          'selection_end': 829,
          'selection_start': 815},
         1280144995.346648),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('history',
                             15)],
          'first-line': 1,
          'folded-linenos': [],
          'sel-line': 94,
          'sel-line-start': 4188,
          'selection_end': 4188,
          'selection_start': 4188},
         1280145002.8591149),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 115,
          'folded-linenos': [],
          'sel-line': 129,
          'sel-line-start': 5588,
          'selection_end': 5606,
          'selection_start': 5592},
         1280145004.239557),
        (loc('helios/settings.py'),
         {'attrib-starts': [],
          'first-line': 78,
          'folded-linenos': [],
          'sel-line': 100,
          'sel-line-start': 3481,
          'selection_end': 3490,
          'selection_start': 3490},
         1280145023.051527),
        (loc('helios/urls.py'),
         {'attrib-starts': [],
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 757,
          'selection_end': 829,
          'selection_start': 815},
         1280145025.7624321),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 129,
          'sel-line-start': 5588,
          'selection_end': 5606,
          'selection_start': 5592},
         1280145042.1395099),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 146,
          'sel-line-start': 6278,
          'selection_end': 6278,
          'selection_start': 6278},
         1280145055.137861),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 142,
          'sel-line-start': 6104,
          'selection_end': 6196,
          'selection_start': 6104},
         1280145069.655293),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 138,
          'sel-line-start': 5905,
          'selection_end': 5905,
          'selection_start': 5905},
         1280145099.1675429),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 140,
          'sel-line-start': 5976,
          'selection_end': 5976,
          'selection_start': 5976},
         1280145101.1638179),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 141,
          'sel-line-start': 6061,
          'selection_end': 6061,
          'selection_start': 6061},
         1280145102.281008),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 142,
          'sel-line-start': 6104,
          'selection_end': 6104,
          'selection_start': 6104},
         1280145103.1609371),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 144,
          'sel-line-start': 6197,
          'selection_end': 6197,
          'selection_start': 6197},
         1280145105.1594031),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 146,
          'sel-line-start': 6278,
          'selection_end': 6278,
          'selection_start': 6278},
         1280145106.1707661),
        (loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 147,
          'sel-line-start': 6314,
          'selection_end': 6314,
          'selection_start': 6314},
         1280145107.163383),
        [loc('helios/main/views.py'),
         {'attrib-starts': [('oauth_callback',
                             129)],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 148,
          'sel-line-start': 6345,
          'selection_end': 6345,
          'selection_start': 6345},
         1280145108.162359]],
        19),
        'current-loc': loc('helios/main/views.py'),
        'editor-states': {loc('helios/main/admin.py'): {'attrib-starts': [(''\
        'OAuthRequestTokenAdmin',
        10)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 485,
        'selection_end': 515,
        'selection_start': 515},
                          loc('helios/main/email-auth.py'): {'attrib-starts': [(''\
        'EmailBackend',
        10),
        ('EmailBackend.authenticate',
         11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 419,
        'selection_end': 419,
        'selection_start': 419},
                          loc('helios/main/forms.py'): {'attrib-starts': [(''\
        'LastFMSettingsForm',
        6)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 142,
        'selection_end': 182,
        'selection_start': 182},
                          loc('helios/main/models.py'): {'attrib-starts': [(''\
        'LastFMSettings',
        21)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 706,
        'selection_end': 733,
        'selection_start': 733},
                          loc('helios/main/templates/accounts/profile.html'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 209,
        'selection_end': 223,
        'selection_start': 223},
                          loc('helios/main/templates/accounts/register.html'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 139,
        'selection_end': 177,
        'selection_start': 177},
                          loc('helios/main/templates/base.html'): {'attrib-s'\
        'tarts': [],
        'first-line': 4,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 610,
        'selection_end': 617,
        'selection_start': 617},
                          loc('helios/main/templates/index.html'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 524,
        'selection_end': 526,
        'selection_start': 526},
                          loc('helios/main/views.py'): {'attrib-starts': [(''\
        'oauth_callback',
        129)],
        'first-line': 130,
        'folded-linenos': [],
        'sel-line': 155,
        'sel-line-start': 6619,
        'selection_end': 6661,
        'selection_start': 6661},
                          loc('helios/main/views.pyc'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('helios/settings.py'): {'attrib-starts': [],
        'first-line': 78,
        'folded-linenos': [],
        'sel-line': 100,
        'sel-line-start': 3481,
        'selection_end': 3490,
        'selection_start': 3490},
                          loc('helios/urls.py'): {'attrib-starts': [],
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 757,
        'selection_end': 829,
        'selection_start': 815},
                          loc('usage.py'): {'attrib-starts': [('FoursquareOA'\
        'uthReply',
        134),
        ('FoursquareOAuthReply.get',
         136)],
        'first-line': 138,
        'folded-linenos': [],
        'sel-line': 166,
        'sel-line-start': 5858,
        'selection_end': 5904,
        'selection_start': 5904}},
        'has-focus': True},
                               'open_files': [u'helios/main/admin.py',
        u'helios/main/templates/accounts/register.html',
        u'helios/main/templates/base.html',
        u'helios/main/templates/index.html',
        u'helios/main/views.pyc',
        u'usage.py',
        u'helios/main/models.py',
        u'helios/main/templates/accounts/profile.html',
        u'helios/main/forms.py',
        u'helios/main/email-auth.py',
        u'helios/settings.py',
        u'helios/urls.py',
        u'helios/main/views.py']},
        'split_percents': {},
        'splits': 1,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (703,
                         75,
                         577,
                         966)}]}
guimgr.recent-documents = [loc('helios/main/views.py'),
                           loc('helios/urls.py'),
                           loc('helios/settings.py'),
                           loc('helios/main/views.pyc'),
                           loc('helios/main/email-auth.py'),
                           loc('helios/main/forms.py'),
                           loc('helios/main/templates/accounts/profile.html'),
                           loc('helios/main/models.py')]
guimgr.visual-state = {loc('app.yaml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 110,
        'selection_end': 110,
        'selection_start': 110},
                       loc('helios/main/templates/index.html'): {'attrib-sta'\
        'rts': [],
        'first-line': 4,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 829,
        'selection_end': 836,
        'selection_start': 836},
                       loc('templates/index.html'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../google_appengine/VERSION'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../google_appengine/dev_appserver.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../google_appengine/google/appengine/api/urlfetch.py'): {''\
        'attrib-starts': [('_get_fetch_result',
                           292)],
        'first-line': 302,
        'folded-linenos': [],
        'sel-line': 324,
        'sel-line-start': 10015,
        'selection_end': 10015,
        'selection_start': 10015},
                       loc('../google_appengine/google/appengine/ext/webapp/__init__.py'): {''\
        'attrib-starts': [('WSGIApplication',
                           461),
                          ('WSGIApplication.__call__',
                           487)],
        'first-line': 505,
        'folded-linenos': [],
        'sel-line': 526,
        'sel-line-start': 16637,
        'selection_end': 16637,
        'selection_start': 16637},
                       loc('../google_appengine/google/appengine/tools/dev_appserver.py'): {''\
        'attrib-starts': [('LoadAppConfig',
                           3399)],
        'first-line': 3421,
        'folded-linenos': [],
        'sel-line': 3465,
        'sel-line-start': 114076,
        'selection_end': 114076,
        'selection_start': 114076},
                       loc('../../../../usr/lib/python2.6/_strptime.py'): {''\
        'attrib-starts': [('_strptime',
                           294)],
        'first-line': 320,
        'folded-linenos': [],
        'sel-line': 324,
        'sel-line-start': 14025,
        'selection_end': 14025,
        'selection_start': 14025},
                       loc('../../../../usr/lib/python2.6/dist-packages/apport_python_hook.py'): {''\
        'attrib-starts': [('apport_excepthook',
                           28)],
        'first-line': 33,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1771,
        'selection_end': 1771,
        'selection_start': 1771},
                       loc('../../../../usr/lib/python2.6/dist-packages/apt/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 882,
        'selection_end': 882,
        'selection_start': 882},
                       loc('../../../../usr/lib/python2.6/re.py'): {'attrib-'\
        'starts': [('_compile',
                    228)],
        'first-line': 241,
        'folded-linenos': [],
        'sel-line': 244,
        'sel-line-start': 10411,
        'selection_end': 10411,
        'selection_start': 10411},
                       loc('../../../../usr/local/lib/python2.6/dist-packages/django/contrib/auth/__init__.py'): {''\
        'attrib-starts': [('authenticate',
                           43)],
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 2049,
        'selection_end': 2049,
        'selection_start': 2049},
                       loc('../../../../usr/local/lib/python2.6/dist-packages/django/core/handlers/base.py'): {''\
        'attrib-starts': [('BaseHandler',
                           7),
                          ('BaseHandler.get_response',
                           65)],
        'first-line': 126,
        'folded-linenos': [],
        'sel-line': 132,
        'sel-line-start': 5859,
        'selection_end': 5859,
        'selection_start': 5859},
                       loc('../../../../usr/local/lib/python2.6/dist-packages/django/db/models/fields/related.py'): {''\
        'attrib-starts': [('ReverseSingleRelatedObjectDescriptor',
                           265),
                          ('ReverseSingleRelatedObjectDescriptor.__set__',
                           305)],
        'first-line': 311,
        'folded-linenos': [],
        'sel-line': 317,
        'sel-line-start': 14380,
        'selection_end': 14380,
        'selection_start': 14380},
                       loc('../../../../usr/local/lib/python2.6/dist-packages/django/db/models/query.py'): {''\
        'attrib-starts': [('QuerySet',
                           25),
                          ('QuerySet.get',
                           327)],
        'first-line': 331,
        'folded-linenos': [],
        'sel-line': 340,
        'sel-line-start': 12127,
        'selection_end': 12127,
        'selection_start': 12127},
                       loc('../../../../usr/local/lib/python2.6/dist-packages/django/db/models/sql/query.py'): {''\
        'attrib-starts': [('Query',
                           89),
                          ('Query.setup_joins',
                           1146)],
        'first-line': 1187,
        'folded-linenos': [],
        'sel-line': 1193,
        'sel-line-start': 50655,
        'selection_end': 50655,
        'selection_start': 50655}}
proj.env-vars = {loc('helios/manage.py'): ('project',
        ['']),
                 loc('../google_appengine/dev_appserver.py'): ('project',
        [''])}
search.search-history = [u'index',
                         u'FoursquareOAuthReply',
                         u'TwitterOAuthReply',
                         u'parse_qsl',
                         u'OAuthAccessToken',
                         u'logging',
                         u'client',
                         u'key_name',
                         u'FIXME',
                         u'callback',
                         u'default_api_suffix',
                         u'json',
                         u'db',
                         u'set_cookie',
                         u'cookie',
                         u'OAuthHandler',
                         u'twitter_specifier_handler',
                         u'dump',
                         u'decode_json']
