#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('../google_appengine'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('.'),
                        'excludes': [u'.git'],
                        'filter': '*',
                        'include_hidden': True,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.main-file = loc('../google_appengine/dev_appserver.py')
[user attributes]
debug.breakpoints = {loc('usage.py'): {159: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../google_appengine/dev_appserver.py'): {}}
debug.run-args = {loc('../google_appengine/dev_appserver.py'): '/home/channa'\
        'm/Code/Helios'}
debug.show-args-dialog = {loc('../google_appengine/dev_appserver.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'm4pIeD44BL2uY8nnOPO4vXBbo9'\
        'temp3y',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'notebook_display': 'tabs only',
                 'notebook_percent': 0.34691745036572619,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': None,
                                 'expanded-nodes': [(1,)],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('templates',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [9],
        'notebook_display': 'normal',
        'notebook_percent': 0.29922779922779918,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['U\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 1,
                       'folded-linenos': [],
                       'history': {None: ['ob = a.getObject()\n',
        'a = subject.getObject()\n',
        'p = a.Schema()\n',
        'for i in p._fields:\n',
        'p = a[0]\n',
        'p.__dict__()\n',
        'p.__dict__\n',
        'p.EffectiveDate\n',
        'p.PublishedDate\n',
        'p.Date\n',
        'dir(p)\n',
        'print dir(p)\n',
        'for i in dir(p):\n',
        '\ti\n',
        'p\n',
        'p.creation_date()\n',
        'p.creation_date\n',
        'p.modification_date\n',
        'p.effectiveDate\n',
        "a= catalog(portal_type='News Item',review_state=state,path=path,sor"\
        "t_on='Date',sort_order='reverse',sort_limit=limit)[:limit]\n",
        'a.publishedDate\n',
        'a.published_date\n',
        'a[0].published_date\n',
        'a[0].publishedDate\n',
        'a[0]\n',
        "a[0].has_key('effectiveDate')\n",
        "a[0].has_key('Date')\n",
        "a[0].has_key('creation_date')\n",
        'a[0].effectiveDate\n',
        'a[0].geteffectiveDate()\n',
        'a[0].getEffectiveDate()\n',
        'b = a[0].getObject()\n',
        'b\n',
        'b.EffectiveDate()\n',
        "results = self.context.portal_catalog(portal_type='Promo Item',path"\
        "={'query': path, 'depth':1},review_state='published',sort_order='de"\
        "scending',)[:MAX_PROMO_RESULTS]\n",
        'len(results)\n',
        'crumbs\n',
        "query = {'portal_type': ['KeyArticle', 'KeyExampleArticle', 'KeyWra"\
        "pper'],'path': {'query': pathQuery,'depth': 1,},'sort_on': 'long_so"\
        "rtable_title',}\n",
        'brains\n',
        'brains[0]\n',
        'a = brains[0]\n',
        'a.reviewstatus\n',
        'a.status\n',
        'a.review_state\n',
        'self\n',
        'messages\n',
        'users = False\n',
        'users = 0\n',
        'users = []\n',
        'nsmr\n',
        'name\n',
        'self.name\n',
        'self.id\n',
        'self.title\n',
        'self.description\n',
        'self.regex\n',
        'r\n',
        'm\n',
        'randomstring\n',
        'retval\n',
        '"%s/passwordreset/%s" % (host, randomstring)\n',
        'u = users[0]\n',
        'u\n',
        'a = u.getObject()\n',
        'a\n',
        'a.id\n',
        'password_reset.requestReset(a.id)\n',
        'reset_url_parts = password_reset.requestReset(uid)\n',
        'reset_url_parts\n',
        'userid\n',
        'uid.getId()\n',
        'reset_url\n',
        'message\n',
        "db_user = app.portal.portal_membership.getMemberById(('asdf'))\n",
        "db_user = context.portal_membership.getMemberById(('asdf'))\n",
        'db_user\n',
        'db_user.keys()\n',
        'form\n',
        "db_user = context.portal_membership.getMemberById(('asdff'))\n",
        'db_user.getContactMe()\n',
        'preferred_phone\n',
        'context.REQUEST.form\n',
        'payment_type\n',
        'message_data\n',
        'for k,v in message_data:\n',
        'for k,v in message_data.iteritems():\n',
        '\tk,v\n',
        'fieldnames\n',
        'mail_me\n',
        'fieldset\n',
        'terms\n',
        'contactMe\n',
        'state.getErrors()\n',
        'state.id\n',
        'state.keys()\n',
        'state\n',
        'context\n',
        "context.REQUEST.get('contactMe')\n",
        'payment_rate\n',
        'url_text\n'],
                                   u'file:/home/channam/Code/Research/4.py': [''\
        'client.request_token_url\n',
        'oauth_request.http_method\n',
        'self.request_token_url\n',
        'oauth_request.to_header()\n',
        'url\n',
        'host\n',
        'port\n',
        'params\n',
        'response\n',
        'query\n',
        'oauth_request\n',
        'client.authorize_token(oauth_request)\n',
        'line\n'],
                                   u'file:/home/channam/Code/Research/four_map/mapper.py': [""\
        "resp, content = client.request('http://api.foursquare.com/v1/checki"\
        "ns', \"GET\")\n",
        'consumer = oauth.Consumer(consumer_key, consumer_secret)\n',
        'client = oauth.Client(consumer)\n',
        'resp, content = client.request(request_token_url, "GET")\n',
        'request_token = dict(urlparse.parse_qsl(content))\n',
        "\"%s?oauth_token=%s\" % (authorize_url, request_token['oauth_token'"\
        "])\n",
        'token\n',
        'token = "SXYZKD2OGJSTPSNAG4XLOZ1DQ5QSIWIKVYAUZ4B13AK35NTP"\n',
        'token = oauth.Token("SXYZKD2OGJSTPSNAG4XLOZ1DQ5QSIWIKVYAUZ4B13AK35N'\
        'TP")\n',
        'oauth_verifier = "SXYZKD2OGJSTPSNAG4XLOZ1DQ5QSIWIKVYAUZ4B13AK35NTP"'\
        '\n',
        "token = oauth.Token(request_token['oauth_token'], request_token['oa"\
        "uth_token_secret'])\n",
        'token.set_verifier(oauth_verifier)\n',
        'access_token = dict(urlparse.parse_qsl(content))\n',
        "\"    - oauth_token        = %s\" % access_token['oauth_token']\n",
        "\"    - oauth_token_secret = %s\" % access_token['oauth_token_secre"\
        "t']\n",
        'resp, content = client.request(access_token_url, "POST")\n',
        'content\n',
        'resp\n',
        'access_token_url\n',
        "oauth_request = oauth.OAuthRequest.from_consumer_and_token(consumer"\
        ", token=token, http_method='POST', http_url=RESOURCE_URL, parameter"\
        "s=parameters)\n",
        "oauth_request = oauth.OAuthRequest.from_consumer_and_token(consumer"\
        ", token=token, http_method='POST', http_url=RESOURCE_URL, )\n",
        'signature_method_hmac_sha1 = oauth.OAuthSignatureMethod_HMAC_SHA1()'\
        '\n',
        'oauth_request.sign_request(signature_method_hmac_sha1, consumer, to'\
        'ken)\n',
        'params = client.access_resource(oauth_request)\n',
        'token = "NACFWHQJT2DVN0YVUFOYWAJBPXHFYJEDUOMEOKPXVNMFAQDP"\n',
        'toekn\n',
        'token = oauth.OAuthToken.from_string("NACFWHQJT2DVN0YVUFOYWAJBPXHFY'\
        'JEDUOMEOKPXVNMFAQDP")\n',
        'oauth_request\n',
        "oauth.OAuthClient.connection.request('POST', RESOURCE_URL, body=oau"\
        "th_request.to_postdata(), headers=headers)\n",
        'connection = httplib.HTTPConnection("%s:%d" % (self.server, self.po'\
        'rt))\n',
        'RESOURCE_URL = "http://api.foursquare.com/v1/checkins"\n',
        "headers = {'Content-Type' :'application/x-www-form-urlencoded'}\n",
        "connection = httplib.HTTPConnection(\"%s:%d\" % ('api.foursquare.co"\
        "m', '80'))\n",
        "connection = httplib.HTTPConnection(\"%s:%d\" % ('api.foursquare.co"\
        "m', 80))\n",
        'RESOURCE_URL = "/v1/checkins"\n',
        "oauth_request = oauth.OAuthRequest.from_consumer_and_token(consumer"\
        ", token=token, http_method='POST', http_url=RESOURCE_URL)\n",
        'res\n',
        'res.read()\n',
        'headers\n',
        'oauth_request.to_postdata()\n',
        "connection.request('POST', RESOURCE_URL, body=oauth_request.to_post"\
        "data(), headers=headers)\n",
        'res = connection.getresponse()\n',
        'import httplib\n',
        'import oauth.oauth as oauth\n',
        'token = oauth.OAuthToken.from_string("oauth_token_secret=ROGXEUYN2G'\
        'MERFNJ1YT3Y4METHYH5O5GUVJYFMEIIEAML1LG&oauth_token=NACFWHQJT2DVN0YV'\
        'UFOYWAJBPXHFYJEDUOMEOKPXVNMFAQDP")\n',
        'token.key\n',
        'params = {\n',
        "'oauth_version': \"1.0\",\n",
        "'oauth_nonce': oauth.generate_nonce(),\n",
        "'oauth_timestamp': int(time.time())\n",
        '}\n',
        "params['oauth_token'] = consumer.key\n",
        "params['oauth_token'] = token.key\n",
        "params['oauth_consumer_key'] = consumer.key\n",
        'url = "http://api.foursquare.com/v1/checkins"\n',
        'req.sign_request(signature_method, consumer, token)\n',
        'req\n',
        'client = oauth.Client(consumer, token)\n',
        'consumer\n',
        "consumer = oauth.OAuthConsumer('WZG3BFLERY1FOCNVA2D5NNZZ3IG0MR4DOYH"\
        "A4BQAQT40PWX5', 'DI1SYWTW4VK53UEJGNCJ2VGTWGMCVPV5NGMYZ20YXMJD5YQ3')"\
        "\n"],
                                   u'file:/home/channam/Code/Research/protocol_buffers/tests/test_base.py': [''\
        'person\n',
        'person.id\n'],
                                   u'file:/home/channam/Code/google_appengine/dev_appserver.py': [''\
        'os.pathsep.join(EXTRA_PATHS)\n',
        'token_info\n',
        'client\n',
        'client.get_signed_body()\n'],
                                   u'file:/home/channam/projects/isotoma/sandbox/chris/filestore/manage.py': [""\
        "xml = request.POST.get('file')\n",
        'from lxml import etree\n',
        'root = etree.fromstring(xml)\n',
        'root = etree.fromstring(xml, encoding=unicode)\n',
        'root = etree.tostring(xml, encoding=unicode)\n',
        'type(xml)\n',
        'root = etree.fromstring(str(xml))\n',
        "request.POST.get('file')\n",
        'request.POST\n',
        'request.GET\n',
        "request.GET.get('file')\n",
        'file_path\n',
        'filename\n',
        'xml = Upload.objects.filter(id__exact=filename)[1]\n',
        'a = HttpResponse("Upload failed, invalid XML.")\n',
        'a\n',
        'a.status_code\n',
        'a.status_code = 400\n',
        'resp = HttpResponse(content="File not found", status=404)\n',
        'resp.status_code\n',
        'str\n',
        'xml\n',
        'str(xml)\n',
        'root = etree.fromstring(xml) \n',
        "root = etree.fromstring(xml.encode('utf-8')) \n",
        'root\n'],
                                   u'file:/home/channam/projects/isotoma/sandbox/chris/whattodo/do.py': [''\
        'content\n',
        'a\n',
        'self._finished\n',
        'not self._finished\n',
        'assert not self._finished\n',
        'assert (not self._finished)\n'],
                                   u'file:/home/channam/projects/proxy-reporting/code/emreports/manage.py': [''\
        'count\n',
        "count[8]['chris']['www.disney.com']\n",
        "count[10]['chris']['www.disney.com']\n",
        "count[10]['chris']['www.google.com']\n",
        'result\n',
        "response.context[0]['hours'][0]\n",
        'self._errors\n',
        'self.cleaned_data\n',
        'name, field\n',
        'self.valid_value(value)\n',
        'self.errors\n',
        'days_log[0]\n',
        'days_log[0].datetime\n',
        'a = days_log[0].datetime\n',
        'a\n',
        "a.strftime('%H')\n",
        'hour\n',
        "int(line.datetime.strftime('%H'))\n",
        'counted_hours[hour] = []\n',
        'counted_hours[hour].append(line)\n',
        'counted_hours[0]\n',
        'counted_hours = [range(0, 24)]\n',
        '\thour\n',
        '\tcounted_hours.append(hour)\n',
        'counted_hours = []\n',
        'for hour in range(0, 24):\n',
        '\tcounted_hours.append([])\n',
        'counted_hours\n',
        'csv\n',
        'from csv import writer\n',
        'username\n',
        'logs\n',
        'response.context[0][6]\n',
        'response.context[0][2]\n',
        'response.context[0]\n',
        'SquidLog.objects.filter(**params)\n',
        'len(SquidLog.objects.filter(**params))\n',
        'for i SquidLog.objects.filter(**params):\n',
        'days_log\n',
        '\ti.url\n',
        '\ti.datetime\n',
        'for i in days_log:\n',
        '\ti.datetime, i.url\n',
        "len(response.context[0]['hours'])\n",
        "response.context[0]['hours']\n",
        "response.context[0]['hours'][10]\n",
        "len(response.context[0]['hours'][10])\n",
        "len(response.context[0]['hours'][8])\n",
        'response.content[0]\n',
        '\ti.keys()\n',
        'for i in response.context:\n',
        'from BeautifulSoup import BeautifulSoup\n',
        'soup = BeautifulSoup(response.content)\n',
        'soup.prettify()\n',
        'for i in response.context[0]:\n',
        '\tprint i\n',
        "form.base_fields['username']\n",
        "form.base_fields['username'].label\n",
        "form.base_fields['username'].value\n",
        "form.base_fields['username'].error_messages\n",
        'form.cleaned_data\n',
        'form\n',
        'clicks_sorted_by_hour\n',
        'day\n',
        'year\n',
        'response.context\n',
        'response.request\n',
        'response.header\n',
        'response.header()\n',
        "response.has_header('mimetype')\n",
        'len(response.content)\n',
        'for i in response.content:\n',
        "response.content.split('\\r\\n')\n",
        "len(response.content.split('\\r\\n'))\n",
        "for i in response.content.split('\\r\\n'):\n",
        '\ti\n',
        'response\n',
        'self.assertEquals(response.status_code, 200)\n',
        "'{\"sites\": [{\"sitename\": \"www.google-analytics.com\", \"count\""\
        ": 1}, {\"sitename\": \"www.l.addthiscdn.com\", \"count\": 1}, {\"si"\
        "tename\": \"www.google.com\", \"count\": 14}, {\"sitename\": \"www."\
        "dlink.com\", \"count\": 2}, {\"sitename\": \"www.l.yimg.com\", \"co"\
        "unt\": 19}, {\"sitename\": \"www.s7.addthis.com\", \"count\": 7}, {"\
        "\"sitename\": \"www.bsav.search.yahoo.com\", \"count\": 1}, {\"site"\
        "name\": \"www.delicious.com\", \"count\": 2}, {\"sitename\": \"www."\
        "geo.yahoo.com\", \"count\": 2}, {\"sitename\": \"www.disney.com\", "\
        "\"count\": 28}]}'\n",
        "response.content == '{\"sites\": [{\"sitename\": \"www.google-analy"\
        "tics.com\", \"count\": 1}, {\"sitename\": \"www.l.addthiscdn.com\","\
        " \"count\": 1}, {\"sitename\": \"www.google.com\", \"count\": 14}, "\
        "{\"sitename\": \"www.dlink.com\", \"count\": 2}, {\"sitename\": \"w"\
        "ww.l.yimg.com\", \"count\": 19}, {\"sitename\": \"www.s7.addthis.co"\
        "m\", \"count\": 7}, {\"sitename\": \"www.bsav.search.yahoo.com\", \""\
        "count\": 1}, {\"sitename\": \"www.delicious.com\", \"count\": 2}, {"\
        "\"sitename\": \"www.geo.yahoo.com\", \"count\": 2}, {\"sitename\": "\
        "\"www.disney.com\", \"count\": 28}]}'\n",
        'date\n',
        'sites\n',
        "response.content['sites']\n",
        'response.status_code\n',
        'response.content\n',
        'params\n',
        'form.base_fields\n',
        "form.base_fields['datetime']\n",
        "form.base_fields['datetime'].validators\n",
        "form.base_fields['datetime'].__dict__\n",
        'self.fields\n',
        'field\n',
        "formats.get_format('DATETIME_INPUT_FORMATS')\n",
        'format_regex\n',
        'format\n',
        '*time.strptime(value, format)[:6]\n',
        'name\n',
        'value\n',
        'self.input_formats\n',
        'form.errors\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['from django.utils import simplejs'\
        'on \n']},
                       'sel-line': 4,
                       'sel-line-start': 180,
                       'selection_end': 200,
                       'selection_start': 200}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'key_name',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('usage.py'),
        {'attrib-starts': [('OAuthClient',
                            120),
                           ('OAuthClient.get_request_token',
                            196)],
         'first-line': 203,
         'folded-linenos': [],
         'sel-line': 210,
         'sel-line-start': 6715,
         'selection_end': 6782,
         'selection_start': 6774},
        1279055528.3030219),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.get_request_token',
                             196)],
          'first-line': 206,
          'folded-linenos': [],
          'sel-line': 212,
          'sel-line-start': 6798,
          'selection_end': 6824,
          'selection_start': 6816},
         1279055528.8471141),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.get_request_token',
                             196)],
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 215,
          'sel-line-start': 6882,
          'selection_end': 6953,
          'selection_start': 6945},
         1279055530.6659551),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             218)],
          'first-line': 225,
          'folded-linenos': [],
          'sel-line': 233,
          'sel-line-start': 7427,
          'selection_end': 7443,
          'selection_start': 7435},
         1279055533.233299),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             218)],
          'first-line': 230,
          'folded-linenos': [],
          'sel-line': 236,
          'sel-line-start': 7500,
          'selection_end': 7520,
          'selection_start': 7512},
         1279055557.9212811),
        (loc('usage.py'),
         {'attrib-starts': [('MainHandler',
                             359),
                            ('MainHandler.get',
                             362)],
          'first-line': 359,
          'folded-linenos': [],
          'sel-line': 364,
          'sel-line-start': 11706,
          'selection_end': 11745,
          'selection_start': 11714},
         1279055558.867219),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             218)],
          'first-line': 229,
          'folded-linenos': [],
          'sel-line': 239,
          'sel-line-start': 7618,
          'selection_end': 7637,
          'selection_start': 7637},
         1279055610.5432911),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             218)],
          'first-line': 243,
          'folded-linenos': [],
          'sel-line': 250,
          'sel-line-start': 8045,
          'selection_end': 8072,
          'selection_start': 8069},
         1279055838.424813),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             218)],
          'first-line': 243,
          'folded-linenos': [],
          'sel-line': 250,
          'sel-line-start': 8045,
          'selection_end': 8073,
          'selection_start': 8069},
         1279055838.946739),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             218)],
          'first-line': 243,
          'folded-linenos': [],
          'sel-line': 250,
          'sel-line-start': 8045,
          'selection_end': 8077,
          'selection_start': 8069},
         1279055841.549562),
        (loc('usage.py'),
         {'attrib-starts': [('MainHandler',
                             361),
                            ('MainHandler.get',
                             364)],
          'first-line': 364,
          'folded-linenos': [],
          'sel-line': 366,
          'sel-line-start': 11763,
          'selection_end': 11802,
          'selection_start': 11771},
         1279055842.9002061),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.get',
                             135)],
          'first-line': 139,
          'folded-linenos': [],
          'sel-line': 144,
          'sel-line-start': 4595,
          'selection_end': 4638,
          'selection_start': 4638},
         1279055892.455256),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.get',
                             135)],
          'first-line': 139,
          'folded-linenos': [],
          'sel-line': 145,
          'sel-line-start': 4639,
          'selection_end': 4696,
          'selection_start': 4688},
         1279055898.387233),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.post',
                             158)],
          'first-line': 160,
          'folded-linenos': [],
          'sel-line': 168,
          'sel-line-start': 5551,
          'selection_end': 5624,
          'selection_start': 5624},
         1279055899.2199669),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.post',
                             158)],
          'first-line': 162,
          'folded-linenos': [],
          'sel-line': 168,
          'sel-line-start': 5551,
          'selection_end': 5608,
          'selection_start': 5600},
         1279055916.800307),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             220)],
          'first-line': 230,
          'folded-linenos': [],
          'sel-line': 237,
          'sel-line-start': 7568,
          'selection_end': 7584,
          'selection_start': 7576},
         1279055919.815115),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             220)],
          'first-line': 234,
          'folded-linenos': [],
          'sel-line': 240,
          'sel-line-start': 7657,
          'selection_end': 7677,
          'selection_start': 7669},
         1279055922.374239),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             220)],
          'first-line': 234,
          'folded-linenos': [],
          'sel-line': 240,
          'sel-line-start': 7657,
          'selection_end': 7686,
          'selection_start': 7678},
         1279055924.064146),
        (loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             220)],
          'first-line': 245,
          'folded-linenos': [],
          'sel-line': 252,
          'sel-line-start': 8137,
          'selection_end': 8169,
          'selection_start': 8161},
         1279055924.704958),
        [loc('usage.py'),
         {'attrib-starts': [('OAuthClient',
                             120),
                            ('OAuthClient.callback',
                             220)],
          'first-line': 245,
          'folded-linenos': [],
          'sel-line': 252,
          'sel-line-start': 8137,
          'selection_end': 8169,
          'selection_start': 8161},
         1279055929.8648691]],
        19),
        'current-loc': loc('usage.py'),
        'editor-states': {loc('app.yaml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 23,
        'selection_start': 23},
                          loc('templates/index.html'): {'attrib-starts': [],
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 1118,
        'selection_end': 1148,
        'selection_start': 1148},
                          loc('usage.py'): {'attrib-starts': [('OAuthClient',
        120),
        ('OAuthClient.get',
         135)],
        'first-line': 140,
        'folded-linenos': [],
        'sel-line': 145,
        'sel-line-start': 4639,
        'selection_end': 4696,
        'selection_start': 4688}},
        'has-focus': False},
                               'open_files': [u'templates/index.html',
        u'app.yaml',
        u'usage.py']},
        'split_percents': {},
        'splits': 1,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         24,
                         1004,
                         544)}]}
guimgr.recent-documents = [loc('usage.py'),
                           loc('app.yaml')]
guimgr.visual-state = {loc('app.yaml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 110,
        'selection_end': 110,
        'selection_start': 110},
                       loc('../google_appengine/VERSION'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../google_appengine/dev_appserver.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../google_appengine/google/appengine/ext/webapp/__init__.py'): {''\
        'attrib-starts': [('WSGIApplication',
                           461),
                          ('WSGIApplication.__call__',
                           487)],
        'first-line': 527,
        'folded-linenos': [],
        'sel-line': 530,
        'sel-line-start': 16729,
        'selection_end': 16729,
        'selection_start': 16729},
                       loc('../google_appengine/google/appengine/tools/dev_appserver.py'): {''\
        'attrib-starts': [('LoadAppConfig',
                           3399)],
        'first-line': 3421,
        'folded-linenos': [],
        'sel-line': 3465,
        'sel-line-start': 114076,
        'selection_end': 114076,
        'selection_start': 114076},
                       loc('../../../../usr/lib/python2.6/dist-packages/apport_python_hook.py'): {''\
        'attrib-starts': [('apport_excepthook',
                           18)],
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 1310,
        'selection_end': 1310,
        'selection_start': 1310}}
proj.env-vars = {loc('../google_appengine/dev_appserver.py'): ('project',
        [''])}
search.search-history = [u'key_name',
                         u'FIXME',
                         u'callback',
                         u'OAuthAccessToken',
                         u'default_api_suffix',
                         u'json',
                         u'db',
                         u'set_cookie',
                         u'cookie',
                         u'OAuthHandler',
                         u'twitter_specifier_handler',
                         u'dump',
                         u'decode_json']
